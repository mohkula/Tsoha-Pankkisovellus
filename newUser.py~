
    
from db import db
from flask import request, render_template, session, redirect
from app import app
from werkzeug.security import check_password_hash, generate_password_hash
import re
from userPage import userPage
    
def emailMatch(email):
    pattern = '^[a-zA-Z0-9]+[\._]?[a-zA-Z0-9]+[@]\w+[.]\w{2,3}$'
    if(re.search(pattern,email)):  
        return True
          
    else:  
        return False  
        
        

	
        
@app.route("/newUser", methods =["POST"])
def newUser():
    username = request.form["newUsername"]
    password = request.form["newPassword"]
    email = request.form["emailAddress"]
    phoneNumber = request.form["phoneNumber"]
    address = request.form["address"]
    
    if len(username) == 0:
        print("Username can't be empty")
        return render_template("createUser.html")
    	
    if not emailMatch(email):
    	print("Email not correct")
    	return render_template("createUser.html")
   
    if len(phoneNumber) != 10 or not phoneNumber.isdigit():
    	print("phone number must be 10 digits")
    	return render_template("createUser.html")
    	

    
    sql = "SELECT username FROM users WHERE username=:username"
    result = db.session.execute(sql, {"username":username})
    user = result.fetchone()    
    
    if user == None:
        if(len(password) >= 8):
        	
            hash_value = generate_password_hash(password)
            sql = """INSERT INTO users (username,password, email, phone,address)
            VALUES (:username,:password,:email,:phone,:address)"""
            db.session.execute(sql, {"username":username,"password":hash_value,"email"
            :email,"phone":phoneNumber,"address":address})
            db.session.commit()
        
            session["username"] = username
        else:
            print("password too short")
            return render_template("createUser.html")

  
    else:
        print("user already exists")
        return render_template("createUser.html")

    
  
    
    return render_template("userPage.html")   
    
